#ifndef BUS_HANDLER_H_
#define BUS_HANDLER_H_

/***********************************************************************/
/*************************** standard includes *************************/
/***********************************************************************/
#include <stdint.h>
#include <linux/can.h>
#include <sys/types.h>
#include <stdbool.h>
#include <linux/spi/spidev.h>

/***********************************************************************/
/************************** application includes ***********************/
/***********************************************************************/


/***********************************************************************/
/********************************* defines *****************************/
/***********************************************************************/

/*************************************************************************/
/********************************* enum **********************************/
/*************************************************************************/



/***********************************************************************/
/******************************** typedefs *****************************/
/***********************************************************************/
typedef struct _bus_handler
{

    int mBus;
    int mModeWrite;
    int mModeRead;
    uint8_t mBits;
    uint32_t mSpeed;
    uint16_t mDelay;
    struct spi_ioc_transfer mTransfer;
    uint8_t mTx[3];
    uint8_t mRx[2];
    uint8_t mDevice;

} bus_handler_t;



/*************************************************************************/
/********************* Class interface / public methods ******************/
/*************************************************************************/
/*---------------------------------------------------------------------------*/
/*! \brief      Initialize the bus_handler_t object.
 *
 *                 The bus_handler_t object is a singleton and is stored in the class.
 *                 Therefore we can call all other public methods without the object.
 *
 *     \param object
 *                 The object to initialize
 */
bool bus_init(bus_handler_t *object);

/*---------------------------------------------------------------------------*/
/*! \brief      Stuff to be done to the singleton before the system shuts down.
 *
 */
bool bus_shutdown ();

/*---------------------------------------------------------------------------*/
/*! \brief      Sends values to the DAC
 *
 *              tx0 : changes setting of DAC
 *              data : 12 bit data for DAC ( 0-> 0V ; 4095->2.5V V_DAC )
 *
 *
 */
void bus_send_action(uint16_t data,uint8_t tx0);


/*----------------------------------------------------------------------------*/


/*----------------------------------------------------------------------------*/


/*************************************************************************/
/****************************** Class Tasks *****************************/
/*************************************************************************/
#endif /* BUS_HANDLER_H_ */
